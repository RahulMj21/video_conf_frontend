import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { NextRouter, useRouter } from "next/router";
import { useEffect } from "react";
import { FaArrowRight } from "react-icons/fa";
import { useDispatch } from "react-redux";
import toast from "react-hot-toast";
import { setUser, UserInterface } from "../slices/user.slice";
import { Container } from "../styles/common.style";
import {
  Button,
  HomePage,
  Left,
  MainHeading,
  Para,
  Right,
} from "../styles/mainPage.style";
import { fetchCurrentUser } from "../utils/axios";

export interface PageProps {
  user: UserInterface | null;
}

const Home: NextPage<PageProps> = (props: PageProps) => {
  const router: NextRouter = useRouter();
  const dispatch = useDispatch();
  const { user } = props;

  useEffect(() => {
    if (user) {
      dispatch(setUser(user));
      router.push("/rooms");
    }
  }, []);
  return (
    <HomePage>
      <Container className="container">
        <Head>
          <title>Video Chat</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <Left>
          <MainHeading>
            Stay <span>Always Close</span> <br /> From Now
          </MainHeading>
          <Para>
            Meet live with your favourite ones with a few glance. <br />
            Click below to connect.
          </Para>
          <Button onClick={() => router.push("/auth")}>
            Get Started <FaArrowRight />
          </Button>
        </Left>
        <Right>
          <Image
            src="/bg-main.svg"
            height={500}
            width={500}
            objectFit="contain"
          />
        </Right>
      </Container>
    </HomePage>
  );
};

export const getServerSideProps: GetServerSideProps = async (context) => {
  let user: null | UserInterface = null;
  try {
    const { data }: { data: { success: Boolean; user: UserInterface } } =
      await fetchCurrentUser(context.req.cookies);
    if (data.success) {
      user = data.user;
    }
  } catch (error: any) {
    user = null;
  }
  return { props: { user } };
};

export default Home;
